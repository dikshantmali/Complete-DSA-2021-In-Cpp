https://youtu.be/Id-DdcWb5AU

https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array4618/1



    
    int start = l;
	    int end = h;
	    int n=h;
	    int res;
	    while(start <= end)
	    {
	        int mid = start + (end-start)/2;
	        int left = (mid-1+n)%n;
	        int right = (mid+1)%n;
	        if(arr[mid] <= arr[left] && arr[mid] <= arr[right])
	        {
	            res = mid;
	            
	            break;
	        }
	        else if(arr[start] <= arr[mid] && arr[mid] >= arr[end])
	        {
	            start = mid+1;
	        }
	        else 
	        {
	            end = mid-1;
	        }
	    }
		
	    
	    
	    
	    
	    int pos1 = -1;
	    int index1 = lower_bound(arr,arr+res,key) - arr;
	    
	    if(arr[index1] == key && index1!=res)
	    pos1 = index1;
	    
	    
	    
	    
	    int pos2 = -1;
	    int index2 = lower_bound(arr+res,arr+n,key) - arr;
	    if(arr[index2] == key && index2!=n)
	    pos2 = index2;
	    
	    if(pos1 == -1 && pos2 == -1)
	    return -1;
	    else if(pos1 == -1)
	    return pos2;
	    else
	    return pos1;

