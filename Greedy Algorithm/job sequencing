https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#

 static bool comp(pair<int,int> p1,pair<int,int> p2)
    {
        return p1.first > p2.first;
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        vector<int> ans;
        vector<pair<int,int>> a;
        int max_deadline=0;
        int prof = 0;
        for(int i=0;i<n;i++)
        {
            if(arr[i].dead > max_deadline)
            {
                max_deadline = arr[i].dead;
            }
            a.push_back(make_pair(arr[i].profit,arr[i].dead));
        }
        std::sort(a.begin(),a.end(),comp);
        
        bool res[max_deadline+1] = {false};
        res[0] = true;
        int c = 0;
        for(int i=0;i<a.size();++i)
        {
            int index = a[i].second;
            while(res[index] != false && index >= 1)
            {
                index--;
            }
            if(index != 0)
            {
                c++;
                prof += a[i].first;
                res[index] = true;
            }
            
        }
        
        ans.push_back(c);
        ans.push_back(prof);
        
        return ans;
        
        
    } 