    int kadane(int a[],int n)
    {
        int sum=0,max_sum = a[0];
        for(int i=0;i<n;++i)
        {
            sum += a[i];
            if(sum > max_sum)
            max_sum = sum;
            if(sum < 0)
            sum = 0;
        }
        
        return max_sum;
    }
    int circularSubarraySum(int a[], int n){
        
        // your code here
           // your code here
        if(n == 1)
        return a[0];
        
        if(n == 2 && a[0]<0 && a[1]<0)
        return max(a[0],a[1]);
        
        int sum = accumulate(a,a+n,0);
        
        
        int wrap = 0;
        int nonwrap = 0;
        
        nonwrap = kadane(a,n);
        
        for(int i=0;i<n;i++)
        {
            a[i] = -a[i];
        }
        
        wrap = sum + kadane(a,n);
        
        return max(wrap,nonwrap);
        
    }