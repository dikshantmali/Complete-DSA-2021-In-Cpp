https://atcoder.jp/contests/dp/tasks/dp_c

#include<bits/stdc++.h>
using namespace std;
#define ll long long

int dp[100001][3];
signed main() {
  #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);

  int n;
  cin>>n;
  int a[n][3] = {0};
  for (int i = 0; i < n; ++i)
  {
    for (int j = 0; j < 3 ; ++j)
    {
      cin>>a[i][j];
    }
  }

  memset(dp,-1,sizeof(dp));
  for (int i = 0; i < 3; ++i)
  {
    dp[0][i] = a[0][i];
  }

  for (int i = 1; i < n; ++i)
  {
    for (int j = 0; j < 3 ; ++j)
    {
      if (j == 0)
      {
        dp[i][j] = a[i][j] + max(dp[i-1][1] ,dp[i-1][2]);
      }
      else if (j == 1)
      {

        dp[i][j] = a[i][j] + max(dp[i-1][0] ,dp[i-1][2]);
      }
      else
      {

        dp[i][j] = a[i][j] + max(dp[i-1][0] ,dp[i-1][1]);
      }
    }
  }



  cout<<max(dp[n-1][0],max(dp[n-1][1],dp[n-1][2]))<<endl;


    return 0;
  
  
  
}