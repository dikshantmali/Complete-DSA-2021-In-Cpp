
	bool checkcycle(int node,int n,vector<int>adj[])
	{
	    vector<int> visited(n,0);
	    
	    queue<pair<int,int>> q;
	    q.push({node,-1});
	    visited[node] = 1;
	    
	    
	    while(!q.empty()){
	    int node = q.front().first;
	    int parent = q.front().second;
	    
	    for(auto it:adj[node])
	    {
	        if(!visited[it])
	        {
	            q.push({it,node});
	            visited[it] = 1;
	        }
	        else if(parent != it)
	        {
	            return true;
	        }
	    }
	    
	}
	
	return false;
	}
	bool isCycle(int V, vector<int>adj[])
	{
	    // Code here
	    
	    if(checkcycle(0,V,adj))
	    return true;
	    else
	    return false;
	}